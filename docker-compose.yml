version: '3'

services:

  app-rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: app-rabbitmq
    #    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USERNAME:-rabbitmq}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-rabbitmq}
    ports:
      # AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    volumes:
      - ./.docker/rabbitmq/data/:/var/lib/rabbitmq/
    #      - ./.docker/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  app-db-postgresql:
    image: postgres:14-alpine
    container_name: app-db-postgresql
    #    restart: on-failure
    volumes:
      - ./.docker/postgresql/data:/var/lib/postgresql/data
    ports:
      - '5433:5432'
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  app-keycloak:
    image: quay.io/keycloak/keycloak:20.0.1
    container_name: app-keycloak
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    ports:
      - '8081:8080'
    command:
      - start-dev
      - --db=postgres
      - --features=token-exchange,docker
      - --db-url-host=host.docker.internal
      - --db-url-port=5433
      #      - --db-url-properties=
      - --db-url-database=keycloak
      - --db-schema=public
      - --db-username=postgres
      - --db-password=postgres
    #      - --import-realm
    depends_on:
      - app-db-postgresql
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  infra-service-discovery:
    image: com.jefersonalmeida/service.discovery:${SERVICE_VERSION:-latest}
    container_name: infra-service-discovery
    #    restart: on-failure
    env_file:
      - .env
    ports:
      - '8761:8761'
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  infra-api-gateway:
    image: com.jefersonalmeida/service.gateway:${SERVICE_VERSION:-latest}
    container_name: infra-api-gateway
    #    restart: on-failure
    env_file:
      - .env
    ports:
      - '8080:8080'
    depends_on:
      - app-keycloak
      - infra-service-discovery
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  service-card:
    image: com.jefersonalmeida/service.card:${SERVICE_VERSION:-latest}
    container_name: service-card
    #    restart: on-failure
    env_file:
      - .env
    depends_on:
      - app-rabbitmq
      - infra-service-discovery
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  service-customer:
    image: com.jefersonalmeida/service.customer:${SERVICE_VERSION:-latest}
    container_name: service-customer
    #    restart: on-failure
    env_file:
      - .env
    depends_on:
      - infra-service-discovery
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

  service-evaluator:
    image: com.jefersonalmeida/service.evaluator:${SERVICE_VERSION:-latest}
    container_name: service-evaluator
    #    restart: on-failure
    env_file:
      - .env
    depends_on:
      - app-rabbitmq
      - infra-service-discovery
      - service-customer
      - service-card
    networks:
      - ${DEFAULT_NETWORK:-ms-spring-network}

networks:
  ms-spring-network:
    driver: bridge
